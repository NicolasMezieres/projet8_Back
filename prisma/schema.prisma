// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id             String    @id @default(uuid())
  nameRole       String    @unique
  user User[]
}

model User{
  id             String    @id @default(uuid())
  firstname      String
  lastname       String
  email          String    @unique
  password       String
  age            Int
  isActive       Boolean   @default(false)
  token          String?
  idRole         String

  gdpr           DateTime  @default(now())

  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  cart Cart[]
  role Role @relation(fields: [idRole], references: [id])
}

model Cart {
  id              String    @id @default(uuid())
  userId          String
  name            String
  isVisible       Boolean @default(true)
  user   User   @relation(fields: [userId], references: [id])
  cartHasProduct CartHasProduct[]
  command Command?
}

model Command {
  id              String   @id @default(uuid())
  idUser          String   
  idPanier        String   @unique
  isValidate      Boolean  
  validationDate  DateTime
  container       Json
  totalPrice      Float
  created_at    DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  cart Cart @relation(fields: [idPanier], references: [id])
}

model CartHasProduct {
  id              String   @id @default(uuid())
  idCart          String
  idProduct       String
  quantity        Int

  cart   Cart @relation(fields: [idCart], references: [id])
  product  Product @relation(fields: [idProduct], references: [id])
}

model Product {
  id              String   @id @default(uuid())
  title           String   @unique
  image           String
  description     String
  idCategory      String  
  quantity        Int 
  price           Float
  isVisible       Boolean  @default(true)
  cartHasProduct CartHasProduct[]
  category Category @relation(fields: [idCategory],references: [id])
}

model Category {
  id              String @id @default(uuid())
  name            String @unique
  image           String 
  product Product[]
}